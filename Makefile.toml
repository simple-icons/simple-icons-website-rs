[env]
# Clipboard API of wasm_bindgen needs unstable API
# https://docs.rs/web-sys/latest/web_sys/struct.Navigator.html#method.clipboard
RUSTFLAGS = "--cfg=web_sys_unstable_apis"

[tasks.default]
alias = "dev"

[tasks.serve]
description = "Serve the app on development"
install_crate = "trunk"
command = "trunk"
args = [
    "serve",
    "--watch",
    ".",
    "--watch",
    "../components",
    "--watch",
    "../macros",
    "--watch",
    "../simple-icons",
    "--watch",
    "../i18n",
    "--watch",
    "../config",
    "--ignore",
    "assets/dist",
    "--ignore",
    "../i18n/locales",
]
workspace = false
cwd = "./app"

[tasks.serve-and-watch-css]
description = "Run the app and watch CSS on development"
run_task = { name = ["serve", "watch-css-for-dev"], parallel = true }
workspace = false

[tasks.locales]
description = "Generate or update locales"
install_crate = "xtr"
script = [
    "xtr components/src/lib.rs app/src/main.rs --keyword=gettext:2 --keyword=move_gettext:2 --output=i18n/messages.pot",
]
workspace = false

[tasks.docs]
description = "Open components documentation"
command = "cargo"
args = ["doc", "--open", "--no-deps"]
workspace = false

[tasks.formats]
description = "Format files"
run_task = { name = ["format-rust", "format-prettier"], parallel = false }
workspace = false

[tasks.lint]
description = "Check format of files and run linters"
run_task = { name = ["lint-prettier", "lint-rust"], parallel = false }
workspace = false

[tasks.tests]
description = "Run tests"
command = "npx"
args = ["playwright", "test", "--trace", "on"]
workspace = false
cwd = "./end2end"

[tasks.watch-css]
description = "Build CSS with Tailwind on development"
command = "../node_modules/.bin/postcss"
args = ["./stylesheet.css", "-o", "./assets/dist/stylesheet.css", "--watch"]
workspace = false
cwd = "./app"

[tasks.watch-css-for-dev]
# Very dirty copy paste of the previous task to make work with serve
# in parallel because cwd must be different
# see the cargo-make documentation:
# "Setting the taskâ€™s current working directory via cwd attribute will
# result in all parallel tasks being affected."
# TODO: can we define these options in a single place?
description = "Build CSS with Tailwind on development"
command = "../node_modules/.bin/tailwindcss"
args = [
    "-i",
    "./stylesheet.css",
    "-o",
    "./assets/dist/stylesheet.css",
    "--watch",
    "--no-minify"
]
workspace = false
cwd = "."

[tasks.dev]
description = "Run the app and watch CSS on development"
run_task = { name = ["run-pre-build-scripts", "serve-and-watch-css"] }
workspace = false

[tasks.builds]
description = "Build the app for production"
install_crate = "trunk"
run_task = { name = ["run-pre-build-scripts", "build-css", "build-wasm"] }
workspace = false

[tasks.build-wasm]
description = "Build the WASM app for production"
install_crate = "trunk"
command = "trunk"
args = ["build", "--release"]
cwd = "./app"
workspace = false

[tasks.build-css]
description = "Build CSS with TailwindCSS for production"
command = "../node_modules/.bin/tailwindcss"
args = [
    "-i",
    "./stylesheet.css",
    "-o",
    "./assets/dist/stylesheet.css",
    "--minify"
]
cwd = "./app"
workspace = false

[tasks.format-rust-code]
description = "Format Rust code with rustfmt"
install_crate = "rustfmt"
workspace = false
command = "cargo"
args = ["fmt", "--all"]

[tasks.lint-rust-code]
description = "Format Rust code with rustfmt"
install_crate = "rustfmt"
workspace = false
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.format-leptos-code]
description = "Format leptos view! macros"
install_crate = "leptosfmt"
workspace = false
command = "leptosfmt"
args = ["*/src/**/*.rs"]

[tasks.format-rust]
description = "Format Rust code and leptos view! macros"
run_task = { name = [
    "format-rust-code",
    "format-leptos-code"
], parallel = false }
workspace = false

[tasks.lint-rust]
description = "Lint Rust code and leptos view! macros"
run_task = { name = [
    "lint-rust-code",
    # TODO: https://github.com/bram209/leptosfmt/issues/12

], parallel = false }
workspace = false

[tasks.format-prettier]
description = "Format non Rust files in the project with prettier"
command = "node_modules/.bin/prettier"
args = ["--write", ".", "--ignore-path", ".gitignore"]
workspace = false

[tasks.lint-prettier]
description = "Check formatting of non Rust files in the project with prettier"
command = "node_modules/.bin/prettier"
args = ["--check", ".", "--ignore-path", ".gitignore"]
workspace = false

[tasks.fetch-deprecated-icons]
description = "Fetch deprecated icons from simple-icons repository"
command = "npm"
args = ["run", "fetch-deprecated-icons"]
workspace = false

[tasks.build-fast-fuzzy]
description = "Build the fast-fuzzy JS library for the web"
command = "node_modules/.bin/esbuild"
args = [
    "components/src/controls/search/fast-fuzzy.js",
    "--bundle",
    "--outfile=app/assets/dist/fast-fuzzy.js"
]
workspace = false

[tasks.run-pre-build-scripts]
description = "Run pre-build scripts"
run_task = { name = [
    "fetch-deprecated-icons",
    "build-fast-fuzzy",
], parallel = true }
workspace = false
